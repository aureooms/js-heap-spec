'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.decreasekey = undefined;
exports._decreasekey = _decreasekey;

var _tester = require('../tester');

var _jsRandom = require('@aureooms/js-random');

function _decreasekey(_test, length, heapname, Heap, diffname, diff, n) {

	var title = 'Heap decreasekey (' + heapname + ', ' + diffname + ', ' + n + ')';

	_test(title, function (t) {

		var q, a, reference, references, i, x, b;

		q = Heap(diff);
		a = [];
		b = [];
		references = [];

		if (length) t.deepEqual(q.length, 0, "check length zero");

		i = n;
		while (i--) {
			x = Math.random();
			reference = q.push(x);
			references.push(reference);
			a.push(x);
			if (length) t.deepEqual(q.length, a.length);
		}

		(0, _jsRandom.shuffle)(references, 0, n);

		for (i = 0; i < n; ++i) {

			a[i] -= Math.random();
			q.decreasekey(references[i], a[i]);
			if (length) t.deepEqual(q.length, n);
		}

		i = n;

		while (i--) {

			b.push(q.pop());
			if (length) t.deepEqual(q.length, i);
		}

		a.sort(diff);
		b.sort(diff);

		t.deepEqual(b, a, "check identical");

		if (length) t.deepEqual(q.length, 0, "check length zero");

		t.deepEqual(q.head(), undefined, "check head empty");
		t.deepEqual(q.headreference(), null, "check headreference empty");
		t.deepEqual(q.pop(), undefined, "check pop empty");
		t.deepEqual(q.popreference(), null, "check popreference empty");
	});
}

var decreasekey = exports.decreasekey = (0, _tester.tester)(_decreasekey);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYXJ0cy9kZWNyZWFzZWtleS5qcyJdLCJuYW1lcyI6WyJfZGVjcmVhc2VrZXkiLCJfdGVzdCIsImxlbmd0aCIsImhlYXBuYW1lIiwiSGVhcCIsImRpZmZuYW1lIiwiZGlmZiIsIm4iLCJ0aXRsZSIsInEiLCJhIiwicmVmZXJlbmNlIiwicmVmZXJlbmNlcyIsImkiLCJ4IiwiYiIsInQiLCJkZWVwRXF1YWwiLCJNYXRoIiwicmFuZG9tIiwicHVzaCIsImRlY3JlYXNla2V5IiwicG9wIiwic29ydCIsImhlYWQiLCJ1bmRlZmluZWQiLCJoZWFkcmVmZXJlbmNlIiwicG9wcmVmZXJlbmNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7UUFHZ0JBLFksR0FBQUEsWTs7QUFIaEI7O0FBQ0E7O0FBRU8sU0FBU0EsWUFBVCxDQUF3QkMsS0FBeEIsRUFBK0JDLE1BQS9CLEVBQXVDQyxRQUF2QyxFQUFpREMsSUFBakQsRUFBdURDLFFBQXZELEVBQWlFQyxJQUFqRSxFQUF1RUMsQ0FBdkUsRUFBMkU7O0FBRWpGLEtBQU1DLCtCQUE2QkwsUUFBN0IsVUFBMENFLFFBQTFDLFVBQXVERSxDQUF2RCxNQUFOOztBQUVBTixPQUFPTyxLQUFQLEVBQWMsYUFBSzs7QUFFbEIsTUFBSUMsQ0FBSixFQUFPQyxDQUFQLEVBQVVDLFNBQVYsRUFBcUJDLFVBQXJCLEVBQWlDQyxDQUFqQyxFQUFvQ0MsQ0FBcEMsRUFBdUNDLENBQXZDOztBQUVBTixNQUFJTCxLQUFNRSxJQUFOLENBQUo7QUFDQUksTUFBSSxFQUFKO0FBQ0FLLE1BQUksRUFBSjtBQUNBSCxlQUFhLEVBQWI7O0FBRUEsTUFBSVYsTUFBSixFQUFZYyxFQUFFQyxTQUFGLENBQWFSLEVBQUVQLE1BQWYsRUFBdUIsQ0FBdkIsRUFBMEIsbUJBQTFCOztBQUVaVyxNQUFJTixDQUFKO0FBQ0EsU0FBUU0sR0FBUixFQUFjO0FBQ2JDLE9BQUlJLEtBQUtDLE1BQUwsRUFBSjtBQUNBUixlQUFZRixFQUFFVyxJQUFGLENBQVFOLENBQVIsQ0FBWjtBQUNBRixjQUFXUSxJQUFYLENBQWlCVCxTQUFqQjtBQUNBRCxLQUFFVSxJQUFGLENBQVFOLENBQVI7QUFDQSxPQUFJWixNQUFKLEVBQVljLEVBQUVDLFNBQUYsQ0FBYVIsRUFBRVAsTUFBZixFQUF1QlEsRUFBRVIsTUFBekI7QUFDWjs7QUFFRCx5QkFBU1UsVUFBVCxFQUFxQixDQUFyQixFQUF3QkwsQ0FBeEI7O0FBRUEsT0FBTU0sSUFBSSxDQUFWLEVBQWNBLElBQUlOLENBQWxCLEVBQXNCLEVBQUVNLENBQXhCLEVBQTRCOztBQUUzQkgsS0FBRUcsQ0FBRixLQUFRSyxLQUFLQyxNQUFMLEVBQVI7QUFDQVYsS0FBRVksV0FBRixDQUFlVCxXQUFXQyxDQUFYLENBQWYsRUFBOEJILEVBQUVHLENBQUYsQ0FBOUI7QUFDQSxPQUFJWCxNQUFKLEVBQVljLEVBQUVDLFNBQUYsQ0FBYVIsRUFBRVAsTUFBZixFQUF1QkssQ0FBdkI7QUFFWjs7QUFFRE0sTUFBSU4sQ0FBSjs7QUFFQSxTQUFRTSxHQUFSLEVBQWM7O0FBRWJFLEtBQUVLLElBQUYsQ0FBUVgsRUFBRWEsR0FBRixFQUFSO0FBQ0EsT0FBSXBCLE1BQUosRUFBWWMsRUFBRUMsU0FBRixDQUFhUixFQUFFUCxNQUFmLEVBQXVCVyxDQUF2QjtBQUVaOztBQUVESCxJQUFFYSxJQUFGLENBQVFqQixJQUFSO0FBQ0FTLElBQUVRLElBQUYsQ0FBUWpCLElBQVI7O0FBRUFVLElBQUVDLFNBQUYsQ0FBYUYsQ0FBYixFQUFnQkwsQ0FBaEIsRUFBbUIsaUJBQW5COztBQUVBLE1BQUlSLE1BQUosRUFBWWMsRUFBRUMsU0FBRixDQUFhUixFQUFFUCxNQUFmLEVBQXVCLENBQXZCLEVBQTBCLG1CQUExQjs7QUFFWmMsSUFBRUMsU0FBRixDQUFhUixFQUFFZSxJQUFGLEVBQWIsRUFBdUJDLFNBQXZCLEVBQWtDLGtCQUFsQztBQUNBVCxJQUFFQyxTQUFGLENBQWFSLEVBQUVpQixhQUFGLEVBQWIsRUFBZ0MsSUFBaEMsRUFBc0MsMkJBQXRDO0FBQ0FWLElBQUVDLFNBQUYsQ0FBYVIsRUFBRWEsR0FBRixFQUFiLEVBQXNCRyxTQUF0QixFQUFpQyxpQkFBakM7QUFDQVQsSUFBRUMsU0FBRixDQUFhUixFQUFFa0IsWUFBRixFQUFiLEVBQStCLElBQS9CLEVBQXFDLDBCQUFyQztBQUVBLEVBbkREO0FBcURBOztBQUVNLElBQU1OLG9DQUFjLG9CQUFRckIsWUFBUixDQUFwQiIsImZpbGUiOiJkZWNyZWFzZWtleS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRlc3RlciB9IGZyb20gJy4uL3Rlc3RlcicgO1xuaW1wb3J0IHsgc2h1ZmZsZSB9IGZyb20gJ0BhdXJlb29tcy9qcy1yYW5kb20nIDtcblxuZXhwb3J0IGZ1bmN0aW9uIF9kZWNyZWFzZWtleSAoIF90ZXN0LCBsZW5ndGgsIGhlYXBuYW1lLCBIZWFwLCBkaWZmbmFtZSwgZGlmZiwgbiApIHtcblxuXHRjb25zdCB0aXRsZSA9IGBIZWFwIGRlY3JlYXNla2V5ICgke2hlYXBuYW1lfSwgJHtkaWZmbmFtZX0sICR7bn0pYDtcblxuXHRfdGVzdCggdGl0bGUsIHQgPT4ge1xuXG5cdFx0dmFyIHEsIGEsIHJlZmVyZW5jZSwgcmVmZXJlbmNlcywgaSwgeCwgYjtcblxuXHRcdHEgPSBIZWFwKCBkaWZmICk7XG5cdFx0YSA9IFtdO1xuXHRcdGIgPSBbXTtcblx0XHRyZWZlcmVuY2VzID0gW107XG5cblx0XHRpZiAobGVuZ3RoKSB0LmRlZXBFcXVhbCggcS5sZW5ndGgsIDAsIFwiY2hlY2sgbGVuZ3RoIHplcm9cIiApO1xuXG5cdFx0aSA9IG47XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHR4ID0gTWF0aC5yYW5kb20oKTtcblx0XHRcdHJlZmVyZW5jZSA9IHEucHVzaCggeCApO1xuXHRcdFx0cmVmZXJlbmNlcy5wdXNoKCByZWZlcmVuY2UgKTtcblx0XHRcdGEucHVzaCggeCApO1xuXHRcdFx0aWYgKGxlbmd0aCkgdC5kZWVwRXF1YWwoIHEubGVuZ3RoLCBhLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdHNodWZmbGUoIHJlZmVyZW5jZXMsIDAsIG4gKTtcblxuXHRcdGZvciAoIGkgPSAwIDsgaSA8IG4gOyArK2kgKSB7XG5cblx0XHRcdGFbaV0gLT0gTWF0aC5yYW5kb20oKTtcblx0XHRcdHEuZGVjcmVhc2VrZXkoIHJlZmVyZW5jZXNbaV0sIGFbaV0gKTtcblx0XHRcdGlmIChsZW5ndGgpIHQuZGVlcEVxdWFsKCBxLmxlbmd0aCwgbiApO1xuXG5cdFx0fVxuXG5cdFx0aSA9IG47XG5cblx0XHR3aGlsZSAoIGktLSApIHtcblxuXHRcdFx0Yi5wdXNoKCBxLnBvcCgpICk7XG5cdFx0XHRpZiAobGVuZ3RoKSB0LmRlZXBFcXVhbCggcS5sZW5ndGgsIGkgKTtcblxuXHRcdH1cblxuXHRcdGEuc29ydCggZGlmZiApO1xuXHRcdGIuc29ydCggZGlmZiApO1xuXG5cdFx0dC5kZWVwRXF1YWwoIGIsIGEsIFwiY2hlY2sgaWRlbnRpY2FsXCIgKTtcblxuXHRcdGlmIChsZW5ndGgpIHQuZGVlcEVxdWFsKCBxLmxlbmd0aCwgMCwgXCJjaGVjayBsZW5ndGggemVyb1wiICk7XG5cblx0XHR0LmRlZXBFcXVhbCggcS5oZWFkKCksIHVuZGVmaW5lZCwgXCJjaGVjayBoZWFkIGVtcHR5XCIgKTtcblx0XHR0LmRlZXBFcXVhbCggcS5oZWFkcmVmZXJlbmNlKCksIG51bGwsIFwiY2hlY2sgaGVhZHJlZmVyZW5jZSBlbXB0eVwiICk7XG5cdFx0dC5kZWVwRXF1YWwoIHEucG9wKCksIHVuZGVmaW5lZCwgXCJjaGVjayBwb3AgZW1wdHlcIiApO1xuXHRcdHQuZGVlcEVxdWFsKCBxLnBvcHJlZmVyZW5jZSgpLCBudWxsLCBcImNoZWNrIHBvcHJlZmVyZW5jZSBlbXB0eVwiICk7XG5cblx0fSk7XG5cbn1cblxuZXhwb3J0IGNvbnN0IGRlY3JlYXNla2V5ID0gdGVzdGVyKCBfZGVjcmVhc2VrZXkgKSA7XG4iXX0=