"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.merge = undefined;
exports._merge = _merge;

var _tester = require("../tester");

function _merge(_test, heapname, Heap, diffname, diff, m, n) {

	var title = "Heap merge (" + heapname + ", " + diffname + ", " + m + ", " + n + ")";

	_test(title, function (t) {

		var q, q1, q2, a, x, i, b;

		a = [];
		q = Heap(diff);
		q1 = Heap(diff);
		q2 = Heap(diff);

		t.deepEqual(q.pop(), undefined, "1st empty pop");

		i = m;
		while (i--) {
			x = Math.random();
			q1.push(x);
			a.push(x);
		}

		i = n;
		while (i--) {
			x = Math.random();
			q2.push(x);
			a.push(x);
		}

		a.sort(diff);

		q.merge(q1);
		q.merge(q2);

		i = m + n;
		b = [];

		while (i--) {
			b.push(q.pop());
		}

		t.deepEqual(b, a, "check sorted");

		t.deepEqual(q.pop(), undefined, "2nd empty pop");

		t.deepEqual(q.length, 0, "queue empty");
	});
}

var merge = exports.merge = (0, _tester.tester2)(_merge);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYXJ0cy9tZXJnZS5qcyJdLCJuYW1lcyI6WyJfbWVyZ2UiLCJfdGVzdCIsImhlYXBuYW1lIiwiSGVhcCIsImRpZmZuYW1lIiwiZGlmZiIsIm0iLCJuIiwidGl0bGUiLCJxIiwicTEiLCJxMiIsImEiLCJ4IiwiaSIsImIiLCJ0IiwiZGVlcEVxdWFsIiwicG9wIiwidW5kZWZpbmVkIiwiTWF0aCIsInJhbmRvbSIsInB1c2giLCJzb3J0IiwibWVyZ2UiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7OztRQUVnQkEsTSxHQUFBQSxNOztBQUZoQjs7QUFFTyxTQUFTQSxNQUFULENBQWtCQyxLQUFsQixFQUF5QkMsUUFBekIsRUFBbUNDLElBQW5DLEVBQXlDQyxRQUF6QyxFQUFtREMsSUFBbkQsRUFBeURDLENBQXpELEVBQTREQyxDQUE1RCxFQUFnRTs7QUFFdEUsS0FBTUMseUJBQXVCTixRQUF2QixVQUFvQ0UsUUFBcEMsVUFBaURFLENBQWpELFVBQXVEQyxDQUF2RCxNQUFOOztBQUVBTixPQUFPTyxLQUFQLEVBQWMsYUFBSzs7QUFFbEIsTUFBSUMsQ0FBSixFQUFPQyxFQUFQLEVBQVdDLEVBQVgsRUFBZUMsQ0FBZixFQUFrQkMsQ0FBbEIsRUFBcUJDLENBQXJCLEVBQXdCQyxDQUF4Qjs7QUFFQUgsTUFBSSxFQUFKO0FBQ0FILE1BQUlOLEtBQU1FLElBQU4sQ0FBSjtBQUNBSyxPQUFLUCxLQUFNRSxJQUFOLENBQUw7QUFDQU0sT0FBS1IsS0FBTUUsSUFBTixDQUFMOztBQUVBVyxJQUFFQyxTQUFGLENBQWFSLEVBQUVTLEdBQUYsRUFBYixFQUFzQkMsU0FBdEIsRUFBaUMsZUFBakM7O0FBRUFMLE1BQUlSLENBQUo7QUFDQSxTQUFRUSxHQUFSLEVBQWM7QUFDYkQsT0FBSU8sS0FBS0MsTUFBTCxFQUFKO0FBQ0FYLE1BQUdZLElBQUgsQ0FBUVQsQ0FBUjtBQUNBRCxLQUFFVSxJQUFGLENBQU9ULENBQVA7QUFDQTs7QUFFREMsTUFBSVAsQ0FBSjtBQUNBLFNBQVFPLEdBQVIsRUFBYztBQUNiRCxPQUFJTyxLQUFLQyxNQUFMLEVBQUo7QUFDQVYsTUFBR1csSUFBSCxDQUFRVCxDQUFSO0FBQ0FELEtBQUVVLElBQUYsQ0FBT1QsQ0FBUDtBQUNBOztBQUVERCxJQUFFVyxJQUFGLENBQVFsQixJQUFSOztBQUVBSSxJQUFFZSxLQUFGLENBQVNkLEVBQVQ7QUFDQUQsSUFBRWUsS0FBRixDQUFTYixFQUFUOztBQUVBRyxNQUFJUixJQUFJQyxDQUFSO0FBQ0FRLE1BQUksRUFBSjs7QUFFQSxTQUFRRCxHQUFSLEVBQWM7QUFDYkMsS0FBRU8sSUFBRixDQUFRYixFQUFFUyxHQUFGLEVBQVI7QUFDQTs7QUFFREYsSUFBRUMsU0FBRixDQUFhRixDQUFiLEVBQWdCSCxDQUFoQixFQUFtQixjQUFuQjs7QUFFQUksSUFBRUMsU0FBRixDQUFhUixFQUFFUyxHQUFGLEVBQWIsRUFBc0JDLFNBQXRCLEVBQWlDLGVBQWpDOztBQUVBSCxJQUFFQyxTQUFGLENBQWFSLEVBQUVnQixNQUFmLEVBQXVCLENBQXZCLEVBQTBCLGFBQTFCO0FBRUEsRUEzQ0Q7QUE2Q0E7O0FBRU0sSUFBTUQsd0JBQVEscUJBQVN4QixNQUFULENBQWQiLCJmaWxlIjoibWVyZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0ZXN0ZXIyIH0gZnJvbSAnLi4vdGVzdGVyJyA7XG5cbmV4cG9ydCBmdW5jdGlvbiBfbWVyZ2UgKCBfdGVzdCwgaGVhcG5hbWUsIEhlYXAsIGRpZmZuYW1lLCBkaWZmLCBtLCBuICkge1xuXG5cdGNvbnN0IHRpdGxlID0gYEhlYXAgbWVyZ2UgKCR7aGVhcG5hbWV9LCAke2RpZmZuYW1lfSwgJHttfSwgJHtufSlgO1xuXG5cdF90ZXN0KCB0aXRsZSwgdCA9PiB7XG5cblx0XHR2YXIgcSwgcTEsIHEyLCBhLCB4LCBpLCBiO1xuXG5cdFx0YSA9IFtdO1xuXHRcdHEgPSBIZWFwKCBkaWZmICk7XG5cdFx0cTEgPSBIZWFwKCBkaWZmICk7XG5cdFx0cTIgPSBIZWFwKCBkaWZmICk7XG5cblx0XHR0LmRlZXBFcXVhbCggcS5wb3AoKSwgdW5kZWZpbmVkLCBcIjFzdCBlbXB0eSBwb3BcIiApO1xuXG5cdFx0aSA9IG07XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHR4ID0gTWF0aC5yYW5kb20oKTtcblx0XHRcdHExLnB1c2goeCk7XG5cdFx0XHRhLnB1c2goeCk7XG5cdFx0fVxuXG5cdFx0aSA9IG47XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHR4ID0gTWF0aC5yYW5kb20oKTtcblx0XHRcdHEyLnB1c2goeCk7XG5cdFx0XHRhLnB1c2goeCk7XG5cdFx0fVxuXG5cdFx0YS5zb3J0KCBkaWZmICk7XG5cblx0XHRxLm1lcmdlKCBxMSApO1xuXHRcdHEubWVyZ2UoIHEyICk7XG5cblx0XHRpID0gbSArIG47XG5cdFx0YiA9IFtdO1xuXG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRiLnB1c2goIHEucG9wKCkgKTtcblx0XHR9XG5cblx0XHR0LmRlZXBFcXVhbCggYiwgYSwgXCJjaGVjayBzb3J0ZWRcIiApO1xuXG5cdFx0dC5kZWVwRXF1YWwoIHEucG9wKCksIHVuZGVmaW5lZCwgXCIybmQgZW1wdHkgcG9wXCIgKTtcblxuXHRcdHQuZGVlcEVxdWFsKCBxLmxlbmd0aCwgMCwgXCJxdWV1ZSBlbXB0eVwiICk7XG5cblx0fSk7XG5cbn1cblxuZXhwb3J0IGNvbnN0IG1lcmdlID0gdGVzdGVyMiggX21lcmdlICkgO1xuIl19