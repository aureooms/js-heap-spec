"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.headreference = undefined;
exports._headreference = _headreference;

var _tester = require("../tester");

function _headreference(_test, heapname, Heap, diffname, diff, n) {

	var title = "Heap headreference (" + heapname + ", " + diffname + ", " + n + ")";

	_test(title, function (t) {

		var q, a, i, x, b;

		q = Heap(diff);
		a = [];

		i = n;
		while (i--) {
			x = Math.random();
			q.push(x);
			a.push(x);
		}

		i = n;
		b = [];

		while (i--) {
			b.push(q.headreference().value);
			q.pop();
		}

		a.sort(diff);

		t.deepEqual(b, a, "check head reference sorted");
		t.deepEqual(q.headreference(), null, "check head reference empty");
	});
}

var headreference = exports.headreference = (0, _tester.tester)(_headreference);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYXJ0cy9oZWFkcmVmZXJlbmNlLmpzIl0sIm5hbWVzIjpbIl9oZWFkcmVmZXJlbmNlIiwiX3Rlc3QiLCJoZWFwbmFtZSIsIkhlYXAiLCJkaWZmbmFtZSIsImRpZmYiLCJuIiwidGl0bGUiLCJxIiwiYSIsImkiLCJ4IiwiYiIsIk1hdGgiLCJyYW5kb20iLCJwdXNoIiwiaGVhZHJlZmVyZW5jZSIsInZhbHVlIiwicG9wIiwic29ydCIsInQiLCJkZWVwRXF1YWwiXSwibWFwcGluZ3MiOiI7Ozs7OztRQUVnQkEsYyxHQUFBQSxjOztBQUZoQjs7QUFFTyxTQUFTQSxjQUFULENBQTBCQyxLQUExQixFQUFpQ0MsUUFBakMsRUFBMkNDLElBQTNDLEVBQWlEQyxRQUFqRCxFQUEyREMsSUFBM0QsRUFBaUVDLENBQWpFLEVBQXFFOztBQUUzRSxLQUFNQyxpQ0FBK0JMLFFBQS9CLFVBQTRDRSxRQUE1QyxVQUF5REUsQ0FBekQsTUFBTjs7QUFFQUwsT0FBT00sS0FBUCxFQUFjLGFBQUs7O0FBRWxCLE1BQUlDLENBQUosRUFBT0MsQ0FBUCxFQUFVQyxDQUFWLEVBQWFDLENBQWIsRUFBZ0JDLENBQWhCOztBQUVBSixNQUFJTCxLQUFNRSxJQUFOLENBQUo7QUFDQUksTUFBSSxFQUFKOztBQUVBQyxNQUFJSixDQUFKO0FBQ0EsU0FBUUksR0FBUixFQUFjO0FBQ2JDLE9BQUlFLEtBQUtDLE1BQUwsRUFBSjtBQUNBTixLQUFFTyxJQUFGLENBQU9KLENBQVA7QUFDQUYsS0FBRU0sSUFBRixDQUFPSixDQUFQO0FBQ0E7O0FBRURELE1BQUlKLENBQUo7QUFDQU0sTUFBSSxFQUFKOztBQUVBLFNBQVFGLEdBQVIsRUFBYztBQUNiRSxLQUFFRyxJQUFGLENBQVFQLEVBQUVRLGFBQUYsR0FBa0JDLEtBQTFCO0FBQ0FULEtBQUVVLEdBQUY7QUFDQTs7QUFFRFQsSUFBRVUsSUFBRixDQUFRZCxJQUFSOztBQUVBZSxJQUFFQyxTQUFGLENBQWFULENBQWIsRUFBZ0JILENBQWhCLEVBQW1CLDZCQUFuQjtBQUNBVyxJQUFFQyxTQUFGLENBQWFiLEVBQUVRLGFBQUYsRUFBYixFQUFnQyxJQUFoQyxFQUFzQyw0QkFBdEM7QUFFQSxFQTNCRDtBQTZCQTs7QUFFTSxJQUFNQSx3Q0FBZ0Isb0JBQVFoQixjQUFSLENBQXRCIiwiZmlsZSI6ImhlYWRyZWZlcmVuY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0ZXN0ZXIgfSBmcm9tICcuLi90ZXN0ZXInIDtcblxuZXhwb3J0IGZ1bmN0aW9uIF9oZWFkcmVmZXJlbmNlICggX3Rlc3QsIGhlYXBuYW1lLCBIZWFwLCBkaWZmbmFtZSwgZGlmZiwgbiApIHtcblxuXHRjb25zdCB0aXRsZSA9IGBIZWFwIGhlYWRyZWZlcmVuY2UgKCR7aGVhcG5hbWV9LCAke2RpZmZuYW1lfSwgJHtufSlgO1xuXG5cdF90ZXN0KCB0aXRsZSwgdCA9PiB7XG5cblx0XHR2YXIgcSwgYSwgaSwgeCwgYjtcblxuXHRcdHEgPSBIZWFwKCBkaWZmICk7XG5cdFx0YSA9IFtdO1xuXG5cdFx0aSA9IG47XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHR4ID0gTWF0aC5yYW5kb20oKTtcblx0XHRcdHEucHVzaCh4KTtcblx0XHRcdGEucHVzaCh4KTtcblx0XHR9XG5cblx0XHRpID0gbjtcblx0XHRiID0gW107XG5cblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdGIucHVzaCggcS5oZWFkcmVmZXJlbmNlKCkudmFsdWUgKTtcblx0XHRcdHEucG9wKCk7XG5cdFx0fVxuXG5cdFx0YS5zb3J0KCBkaWZmICk7XG5cblx0XHR0LmRlZXBFcXVhbCggYiwgYSwgXCJjaGVjayBoZWFkIHJlZmVyZW5jZSBzb3J0ZWRcIiApO1xuXHRcdHQuZGVlcEVxdWFsKCBxLmhlYWRyZWZlcmVuY2UoKSwgbnVsbCwgXCJjaGVjayBoZWFkIHJlZmVyZW5jZSBlbXB0eVwiICk7XG5cblx0fSk7XG5cbn1cblxuZXhwb3J0IGNvbnN0IGhlYWRyZWZlcmVuY2UgPSB0ZXN0ZXIoIF9oZWFkcmVmZXJlbmNlICkgO1xuIl19