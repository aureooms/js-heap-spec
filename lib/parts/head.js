"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.head = undefined;
exports._head = _head;

var _tester = require("../tester");

function _head(_test, length, heapname, Heap, diffname, diff, n) {

	var title = "Heap head (" + heapname + ", " + diffname + ", " + n + ")";

	_test(title, function (t) {

		var q, a, i, x, b;

		q = Heap(diff);
		a = [];

		i = n;

		while (i--) {
			x = Math.random();
			q.push(x);
			a.push(x);
		}

		a.sort(diff);

		i = n;
		b = [];

		while (i--) {
			b.push(q.head());
			q.pop();
		}

		t.deepEqual(b, a, "check head sorted");
		t.deepEqual(q.head(), undefined, "check head empty");
	});
}

var head = exports.head = (0, _tester.tester)(_head);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYXJ0cy9oZWFkLmpzIl0sIm5hbWVzIjpbIl9oZWFkIiwiX3Rlc3QiLCJsZW5ndGgiLCJoZWFwbmFtZSIsIkhlYXAiLCJkaWZmbmFtZSIsImRpZmYiLCJuIiwidGl0bGUiLCJxIiwiYSIsImkiLCJ4IiwiYiIsIk1hdGgiLCJyYW5kb20iLCJwdXNoIiwic29ydCIsImhlYWQiLCJwb3AiLCJ0IiwiZGVlcEVxdWFsIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7UUFFZ0JBLEssR0FBQUEsSzs7QUFGaEI7O0FBRU8sU0FBU0EsS0FBVCxDQUFpQkMsS0FBakIsRUFBd0JDLE1BQXhCLEVBQWdDQyxRQUFoQyxFQUEwQ0MsSUFBMUMsRUFBZ0RDLFFBQWhELEVBQTBEQyxJQUExRCxFQUFnRUMsQ0FBaEUsRUFBb0U7O0FBRTFFLEtBQU1DLHdCQUFzQkwsUUFBdEIsVUFBbUNFLFFBQW5DLFVBQWdERSxDQUFoRCxNQUFOOztBQUVBTixPQUFPTyxLQUFQLEVBQWMsYUFBSzs7QUFFbEIsTUFBSUMsQ0FBSixFQUFPQyxDQUFQLEVBQVVDLENBQVYsRUFBYUMsQ0FBYixFQUFnQkMsQ0FBaEI7O0FBRUFKLE1BQUlMLEtBQU1FLElBQU4sQ0FBSjtBQUNBSSxNQUFJLEVBQUo7O0FBRUFDLE1BQUlKLENBQUo7O0FBRUEsU0FBUUksR0FBUixFQUFjO0FBQ2JDLE9BQUlFLEtBQUtDLE1BQUwsRUFBSjtBQUNBTixLQUFFTyxJQUFGLENBQU9KLENBQVA7QUFDQUYsS0FBRU0sSUFBRixDQUFPSixDQUFQO0FBQ0E7O0FBRURGLElBQUVPLElBQUYsQ0FBUVgsSUFBUjs7QUFFQUssTUFBSUosQ0FBSjtBQUNBTSxNQUFJLEVBQUo7O0FBRUEsU0FBUUYsR0FBUixFQUFjO0FBQ2JFLEtBQUVHLElBQUYsQ0FBUVAsRUFBRVMsSUFBRixFQUFSO0FBQ0FULEtBQUVVLEdBQUY7QUFDQTs7QUFFREMsSUFBRUMsU0FBRixDQUFhUixDQUFiLEVBQWdCSCxDQUFoQixFQUFtQixtQkFBbkI7QUFDQVUsSUFBRUMsU0FBRixDQUFhWixFQUFFUyxJQUFGLEVBQWIsRUFBdUJJLFNBQXZCLEVBQWtDLGtCQUFsQztBQUVBLEVBNUJEO0FBOEJBOztBQUVNLElBQU1KLHNCQUFPLG9CQUFRbEIsS0FBUixDQUFiIiwiZmlsZSI6ImhlYWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0ZXN0ZXIgfSBmcm9tICcuLi90ZXN0ZXInIDtcblxuZXhwb3J0IGZ1bmN0aW9uIF9oZWFkICggX3Rlc3QsIGxlbmd0aCwgaGVhcG5hbWUsIEhlYXAsIGRpZmZuYW1lLCBkaWZmLCBuICkge1xuXG5cdGNvbnN0IHRpdGxlID0gYEhlYXAgaGVhZCAoJHtoZWFwbmFtZX0sICR7ZGlmZm5hbWV9LCAke259KWA7XG5cblx0X3Rlc3QoIHRpdGxlLCB0ID0+IHtcblxuXHRcdHZhciBxLCBhLCBpLCB4LCBiO1xuXG5cdFx0cSA9IEhlYXAoIGRpZmYgKTtcblx0XHRhID0gW107XG5cblx0XHRpID0gbjtcblxuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0eCA9IE1hdGgucmFuZG9tKCk7XG5cdFx0XHRxLnB1c2goeCk7XG5cdFx0XHRhLnB1c2goeCk7XG5cdFx0fVxuXG5cdFx0YS5zb3J0KCBkaWZmICk7XG5cblx0XHRpID0gbjtcblx0XHRiID0gW107XG5cblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdGIucHVzaCggcS5oZWFkKCkgKTtcblx0XHRcdHEucG9wKCk7XG5cdFx0fVxuXG5cdFx0dC5kZWVwRXF1YWwoIGIsIGEsIFwiY2hlY2sgaGVhZCBzb3J0ZWRcIiApO1xuXHRcdHQuZGVlcEVxdWFsKCBxLmhlYWQoKSwgdW5kZWZpbmVkLCBcImNoZWNrIGhlYWQgZW1wdHlcIiApO1xuXG5cdH0pO1xuXG59XG5cbmV4cG9ydCBjb25zdCBoZWFkID0gdGVzdGVyKCBfaGVhZCApIDtcbiJdfQ==