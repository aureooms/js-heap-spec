'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.del = undefined;
exports._del = _del;

var _tester = require('../tester');

var _aureoomsJsRandom = require('@aureooms/js-random');

function _del(_test, length, heapname, Heap, diffname, diff, n) {

	var title = 'Heap delete (' + heapname + ', ' + diffname + ', ' + n + ')';

	_test(title, function (t) {

		var q, a, reference, references, i, x, b;

		q = Heap(diff);
		a = [];
		b = [];
		references = [];

		if (length) t.deepEqual(q.length, 0, "check length zero");

		i = n;
		while (i--) {
			x = Math.random();
			reference = q.push(x);
			references.push(reference);
			a.push(x);
			if (length) t.deepEqual(q.length, a.length);
		}

		(0, _aureoomsJsRandom.shuffle)(references, 0, n);

		for (i = 0; i < n / 2; ++i) {

			b.push(references[i].value);
			q.delete(references[i]);
			if (length) t.deepEqual(q.length, a.length - b.length);
		}

		for (; i < n; ++i) {

			b.push(q.pop());
			if (length) t.deepEqual(q.length, a.length - b.length);
		}

		a.sort(diff);
		b.sort(diff);

		t.deepEqual(b, a, "check identical");

		if (length) t.deepEqual(q.length, 0, "check length zero");

		t.deepEqual(q.head(), undefined, "check head empty");
		t.deepEqual(q.headreference(), null, "check headreference empty");
		t.deepEqual(q.pop(), undefined, "check pop empty");
		t.deepEqual(q.popreference(), null, "check popreference empty");
	});
}

var del = exports.del = (0, _tester.tester)(_del);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYXJ0cy9kZWxldGUuanMiXSwibmFtZXMiOlsiX2RlbCIsIl90ZXN0IiwibGVuZ3RoIiwiaGVhcG5hbWUiLCJIZWFwIiwiZGlmZm5hbWUiLCJkaWZmIiwibiIsInRpdGxlIiwicSIsImEiLCJyZWZlcmVuY2UiLCJyZWZlcmVuY2VzIiwiaSIsIngiLCJiIiwidCIsImRlZXBFcXVhbCIsIk1hdGgiLCJyYW5kb20iLCJwdXNoIiwidmFsdWUiLCJkZWxldGUiLCJwb3AiLCJzb3J0IiwiaGVhZCIsInVuZGVmaW5lZCIsImhlYWRyZWZlcmVuY2UiLCJwb3ByZWZlcmVuY2UiLCJkZWwiXSwibWFwcGluZ3MiOiI7Ozs7OztRQUdnQkEsSSxHQUFBQSxJOztBQUhoQjs7QUFDQTs7QUFFTyxTQUFTQSxJQUFULENBQWdCQyxLQUFoQixFQUF1QkMsTUFBdkIsRUFBK0JDLFFBQS9CLEVBQXlDQyxJQUF6QyxFQUErQ0MsUUFBL0MsRUFBeURDLElBQXpELEVBQStEQyxDQUEvRCxFQUFtRTs7QUFFekUsS0FBTUMsMEJBQXdCTCxRQUF4QixVQUFxQ0UsUUFBckMsVUFBa0RFLENBQWxELE1BQU47O0FBRUFOLE9BQU9PLEtBQVAsRUFBYyxhQUFLOztBQUVsQixNQUFJQyxDQUFKLEVBQU9DLENBQVAsRUFBVUMsU0FBVixFQUFxQkMsVUFBckIsRUFBaUNDLENBQWpDLEVBQW9DQyxDQUFwQyxFQUF1Q0MsQ0FBdkM7O0FBRUFOLE1BQUlMLEtBQU1FLElBQU4sQ0FBSjtBQUNBSSxNQUFJLEVBQUo7QUFDQUssTUFBSSxFQUFKO0FBQ0FILGVBQWEsRUFBYjs7QUFFQSxNQUFJVixNQUFKLEVBQVljLEVBQUVDLFNBQUYsQ0FBYVIsRUFBRVAsTUFBZixFQUF1QixDQUF2QixFQUEwQixtQkFBMUI7O0FBRVpXLE1BQUlOLENBQUo7QUFDQSxTQUFRTSxHQUFSLEVBQWM7QUFDYkMsT0FBSUksS0FBS0MsTUFBTCxFQUFKO0FBQ0FSLGVBQVlGLEVBQUVXLElBQUYsQ0FBUU4sQ0FBUixDQUFaO0FBQ0FGLGNBQVdRLElBQVgsQ0FBaUJULFNBQWpCO0FBQ0FELEtBQUVVLElBQUYsQ0FBUU4sQ0FBUjtBQUNBLE9BQUlaLE1BQUosRUFBWWMsRUFBRUMsU0FBRixDQUFhUixFQUFFUCxNQUFmLEVBQXVCUSxFQUFFUixNQUF6QjtBQUNaOztBQUVELGlDQUFTVSxVQUFULEVBQXFCLENBQXJCLEVBQXdCTCxDQUF4Qjs7QUFFQSxPQUFNTSxJQUFJLENBQVYsRUFBY0EsSUFBSU4sSUFBSSxDQUF0QixFQUEwQixFQUFFTSxDQUE1QixFQUFnQzs7QUFFL0JFLEtBQUVLLElBQUYsQ0FBUVIsV0FBV0MsQ0FBWCxFQUFjUSxLQUF0QjtBQUNBWixLQUFFYSxNQUFGLENBQVVWLFdBQVdDLENBQVgsQ0FBVjtBQUNBLE9BQUlYLE1BQUosRUFBWWMsRUFBRUMsU0FBRixDQUFhUixFQUFFUCxNQUFmLEVBQXVCUSxFQUFFUixNQUFGLEdBQVdhLEVBQUViLE1BQXBDO0FBRVo7O0FBRUQsU0FBUVcsSUFBSU4sQ0FBWixFQUFnQixFQUFFTSxDQUFsQixFQUFzQjs7QUFFckJFLEtBQUVLLElBQUYsQ0FBUVgsRUFBRWMsR0FBRixFQUFSO0FBQ0EsT0FBSXJCLE1BQUosRUFBWWMsRUFBRUMsU0FBRixDQUFhUixFQUFFUCxNQUFmLEVBQXVCUSxFQUFFUixNQUFGLEdBQVdhLEVBQUViLE1BQXBDO0FBRVo7O0FBRURRLElBQUVjLElBQUYsQ0FBUWxCLElBQVI7QUFDQVMsSUFBRVMsSUFBRixDQUFRbEIsSUFBUjs7QUFFQVUsSUFBRUMsU0FBRixDQUFhRixDQUFiLEVBQWdCTCxDQUFoQixFQUFtQixpQkFBbkI7O0FBRUEsTUFBSVIsTUFBSixFQUFZYyxFQUFFQyxTQUFGLENBQWFSLEVBQUVQLE1BQWYsRUFBdUIsQ0FBdkIsRUFBMEIsbUJBQTFCOztBQUVaYyxJQUFFQyxTQUFGLENBQWFSLEVBQUVnQixJQUFGLEVBQWIsRUFBdUJDLFNBQXZCLEVBQWtDLGtCQUFsQztBQUNBVixJQUFFQyxTQUFGLENBQWFSLEVBQUVrQixhQUFGLEVBQWIsRUFBZ0MsSUFBaEMsRUFBc0MsMkJBQXRDO0FBQ0FYLElBQUVDLFNBQUYsQ0FBYVIsRUFBRWMsR0FBRixFQUFiLEVBQXNCRyxTQUF0QixFQUFpQyxpQkFBakM7QUFDQVYsSUFBRUMsU0FBRixDQUFhUixFQUFFbUIsWUFBRixFQUFiLEVBQStCLElBQS9CLEVBQXFDLDBCQUFyQztBQUVBLEVBakREO0FBbURBOztBQUVNLElBQU1DLG9CQUFNLG9CQUFRN0IsSUFBUixDQUFaIiwiZmlsZSI6ImRlbGV0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRlc3RlciB9IGZyb20gJy4uL3Rlc3RlcicgO1xuaW1wb3J0IHsgc2h1ZmZsZSB9IGZyb20gJ2F1cmVvb21zLWpzLXJhbmRvbScgO1xuXG5leHBvcnQgZnVuY3Rpb24gX2RlbCAoIF90ZXN0LCBsZW5ndGgsIGhlYXBuYW1lLCBIZWFwLCBkaWZmbmFtZSwgZGlmZiwgbiApIHtcblxuXHRjb25zdCB0aXRsZSA9IGBIZWFwIGRlbGV0ZSAoJHtoZWFwbmFtZX0sICR7ZGlmZm5hbWV9LCAke259KWA7XG5cblx0X3Rlc3QoIHRpdGxlLCB0ID0+IHtcblxuXHRcdHZhciBxLCBhLCByZWZlcmVuY2UsIHJlZmVyZW5jZXMsIGksIHgsIGI7XG5cblx0XHRxID0gSGVhcCggZGlmZiApO1xuXHRcdGEgPSBbXTtcblx0XHRiID0gW107XG5cdFx0cmVmZXJlbmNlcyA9IFtdO1xuXG5cdFx0aWYgKGxlbmd0aCkgdC5kZWVwRXF1YWwoIHEubGVuZ3RoLCAwLCBcImNoZWNrIGxlbmd0aCB6ZXJvXCIgKTtcblxuXHRcdGkgPSBuO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0eCA9IE1hdGgucmFuZG9tKCk7XG5cdFx0XHRyZWZlcmVuY2UgPSBxLnB1c2goIHggKTtcblx0XHRcdHJlZmVyZW5jZXMucHVzaCggcmVmZXJlbmNlICk7XG5cdFx0XHRhLnB1c2goIHggKTtcblx0XHRcdGlmIChsZW5ndGgpIHQuZGVlcEVxdWFsKCBxLmxlbmd0aCwgYS5sZW5ndGggKTtcblx0XHR9XG5cblx0XHRzaHVmZmxlKCByZWZlcmVuY2VzLCAwLCBuICk7XG5cblx0XHRmb3IgKCBpID0gMCA7IGkgPCBuIC8gMiA7ICsraSApIHtcblxuXHRcdFx0Yi5wdXNoKCByZWZlcmVuY2VzW2ldLnZhbHVlICk7XG5cdFx0XHRxLmRlbGV0ZSggcmVmZXJlbmNlc1tpXSApO1xuXHRcdFx0aWYgKGxlbmd0aCkgdC5kZWVwRXF1YWwoIHEubGVuZ3RoLCBhLmxlbmd0aCAtIGIubGVuZ3RoICk7XG5cblx0XHR9XG5cblx0XHRmb3IgKCA7IGkgPCBuIDsgKytpICkge1xuXG5cdFx0XHRiLnB1c2goIHEucG9wKCkgKTtcblx0XHRcdGlmIChsZW5ndGgpIHQuZGVlcEVxdWFsKCBxLmxlbmd0aCwgYS5sZW5ndGggLSBiLmxlbmd0aCApO1xuXG5cdFx0fVxuXG5cdFx0YS5zb3J0KCBkaWZmICk7XG5cdFx0Yi5zb3J0KCBkaWZmICk7XG5cblx0XHR0LmRlZXBFcXVhbCggYiwgYSwgXCJjaGVjayBpZGVudGljYWxcIiApO1xuXG5cdFx0aWYgKGxlbmd0aCkgdC5kZWVwRXF1YWwoIHEubGVuZ3RoLCAwLCBcImNoZWNrIGxlbmd0aCB6ZXJvXCIgKTtcblxuXHRcdHQuZGVlcEVxdWFsKCBxLmhlYWQoKSwgdW5kZWZpbmVkLCBcImNoZWNrIGhlYWQgZW1wdHlcIiApO1xuXHRcdHQuZGVlcEVxdWFsKCBxLmhlYWRyZWZlcmVuY2UoKSwgbnVsbCwgXCJjaGVjayBoZWFkcmVmZXJlbmNlIGVtcHR5XCIgKTtcblx0XHR0LmRlZXBFcXVhbCggcS5wb3AoKSwgdW5kZWZpbmVkLCBcImNoZWNrIHBvcCBlbXB0eVwiICk7XG5cdFx0dC5kZWVwRXF1YWwoIHEucG9wcmVmZXJlbmNlKCksIG51bGwsIFwiY2hlY2sgcG9wcmVmZXJlbmNlIGVtcHR5XCIgKTtcblxuXHR9KTtcblxufVxuXG5leHBvcnQgY29uc3QgZGVsID0gdGVzdGVyKCBfZGVsICkgO1xuIl19